#include <stdio.h>

// Function to implement the recursive solution to the Tower of Hanoi problem
void towerOfHanoi(int n, char source, char destination, char auxiliary) {
    // Base case: If only one disk is left
    if (n == 1) {
        printf("Move disk 1 from %c to %c\n", source, destination);
        return;
    }

    // Move top n-1 disks from source to auxiliary, using destination as auxiliary
    towerOfHanoi(n - 1, source, auxiliary, destination);

    // Move the nth disk from source to destination
    printf("Move disk %d from %c to %c\n", n, source, destination);

    // Move the n-1 disks from auxiliary to destination, using source as auxiliary
    towerOfHanoi(n - 1, auxiliary, destination, source);
}

int main() {
    int n;

    // Read the number of disks
    printf("Enter the number of disks: ");
    scanf("%d", &n);

    // Call the Tower of Hanoi function to solve the problem
    printf("The sequence of moves is as follows:\n");
    towerOfHanoi(n, 'A', 'C', 'B');  // 'A' is source, 'C' is destination, 'B' is auxiliary

    return 0;
}
