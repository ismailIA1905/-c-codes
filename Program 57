#include <stdio.h>

#define MAX 10  // Define maximum size for matrices

// Function to perform matrix addition
void matrixAdd(int *a, int *b, int *result, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Calculate the sum of corresponding elements using pointers
            *(result + i * cols + j) = *(a + i * cols + j) + *(b + i * cols + j);
        }
    }
}

// Function to print a matrix
void printMatrix(int *matrix, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Print each element using pointer arithmetic
            printf("%d ", *(matrix + i * cols + j));
        }
        printf("\n");
    }
}

int main() {
    int rows, cols;

    // Input the number of rows and columns for the matrices
    printf("Enter the number of rows and columns: ");
    scanf("%d %d", &rows, &cols);

    int a[MAX][MAX], b[MAX][MAX], result[MAX][MAX];

    // Input elements of the first matrix
    printf("\nEnter elements of the first matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &a[i][j]);
        }
    }

    // Input elements of the second matrix
    printf("\nEnter elements of the second matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &b[i][j]);
        }
    }

    // Perform matrix addition
    matrixAdd((int *)a, (int *)b, (int *)result, rows, cols);

    // Display the result of the matrix addition
    printf("\nResult of matrix addition:\n");
    printMatrix((int *)result, rows, cols);

    return 0;
}
